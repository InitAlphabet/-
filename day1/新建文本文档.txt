计算机图形学中，模型变换后到投影通常涉及以下几个步骤：

模型变换（Model Transformation）：

将3D模型的顶点坐标从模型空间转换到世界空间。
视图变换（View Transformation）：

将世界空间中的坐标转换到观察空间，通常涉及到摄像机的位置、朝向和方向。
投影变换（Projection Transformation）：

将观察空间中的坐标转换到裁剪空间。这可以是正交投影或透视投影。
裁剪（Clipping）：

在裁剪空间中，移除那些不在视锥体（视图体）内的顶点或多边形。
视角除法（Perspective Division）：

将裁剪后的坐标从齐次坐标转换到规范化设备坐标（Normalized Device Coordinates, NDC）空间。这通常涉及到将x、y、z坐标除以w坐标。
视口变换（Viewport Transformation）：

将NDC空间中的坐标映射到屏幕空间或视口空间，这涉及到将坐标从[-1, 1]的范围映射到屏幕的实际像素坐标。
光栅化（Rasterization）：

将变换后的2D多边形转换成像素，并确定哪些像素属于当前绘制的多边形。
着色（Shading）：

对每个像素应用光照和材质属性，计算颜色值。
纹理映射（Texture Mapping）：

如果启用了纹理，将纹理图像映射到多边形上，并在像素级别进行插值。
混合（Blending）：

在像素级别，将着色后的颜色与当前帧缓冲区中的颜色进行混合。
帧缓冲（Frame Buffer）：

最终，像素颜色被写入帧缓冲区，形成最终的图像。
这些步骤通常在图形流水线中顺序执行，确保3D模型能够正确地在2D屏幕上显示。在现代图形API（如OpenGL或DirectX）中，这些步骤被抽象成了一系列的图形管线阶段，开发者可以通过编程来控制每个阶段的行为。

﻿
